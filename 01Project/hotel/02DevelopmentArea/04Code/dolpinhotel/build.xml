<project name="dolpinhotel" default="dist" basedir=".">
    <description>
    	dolpinhotel
    </description>
  <!-- 设置全局变量 -->
  <property name="src" location="src"/>
  <property name="config" location="config"/>
  <property name="webcontent" location="WebContent"/>
  <property name="build" location="build"/>
  <property name="classes" location="${build}/classes"/>
  <property name="dist"  location="dist"/>

  <property name="DEPHOME" value="./WebContent/WEB-INF/lib" />
  <property environment="env" />

 <!-- 设置编译时用到的 CLASSPATH  -->
  <path id="CLASSPATH">
  	<!-- 注意：如果本地的容器不是TOMCAT,请修改下面的环境变量  -->
    <fileset dir="${env.TOMCAT_HOME}/lib" casesensitive="no">
      <include name="*.jar" />
    </fileset>
    <fileset dir="${DEPHOME}" casesensitive="no">
     <include name="*.jar" />
    </fileset>
    <pathelement location="${env.JAVA_HOME}/lib/rt.jar" />
  </path>

  <target name="init" depends="clean">
    <!-- 建立时间戳 -->
    <tstamp/>
    <!-- 创建编译时所用到的 build 目录 -->
    <mkdir dir="${build}"/>
    <mkdir dir="${classes}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- 编译 java 代码——从 ${src} 到 ${build} -->
    <javac debug="true" srcdir="${src}" destdir="${classes}" includeantruntime="on" encoding="UTF-8" excludes="com/dolplay/dolpbase/codegen/">
      <compilerarg value="-Xlint:all" />
      <classpath refid="CLASSPATH" />
    </javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- 将所有的 config 文件拷贝至 build 目录下的 classes 目录-->
    <copy todir="${classes}">
      <fileset dir="${config}"/>
    </copy>
    <!-- 创建分发物的目录 -->
    <mkdir dir="${dist}"/>
    <!-- 将 ${webcontent} 下面所有的东西打包成war文件 -->
    <war warfile="${dist}/${ant.project.name}.war" webxml="${webcontent}/WEB-INF/web.xml">
      <classes dir = "${classes}"/>
      <fileset dir="${webcontent}" excludes="**/*sources.jar">
      </fileset>
    </war>
  	<delete file="CodeGenerator.java"/>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- 删除 ${build} 和 ${dist} 这两个目录 -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>